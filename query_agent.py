import os
import pandas as pd
import sqlite3
from langchain_community.utilities import SQLDatabase
from langchain_community.agent_toolkits.sql.toolkit import SQLDatabaseToolkit
from langchain.agents import initialize_agent
from langchain_huggingface import HuggingFaceEndpoint

# Set Hugging Face API token
os.environ["HUGGINGFACEHUB_API_TOKEN"] = os.getenv("HUGGINGFACEHUB_API_TOKEN")

# Initialize LLM endpoint
llm = HuggingFaceEndpoint(
    repo_id="google/flan-t5-xl",
    temperature=0.7
)

# Build SQLite DB from CSV files
if not os.path.exists("ecommerce.db"):
    conn = sqlite3.connect("ecommerce.db")
    for file in ["data/total_sales.csv", "data/ad_sales.csv", "data/eligibility.csv"]:
        if os.path.exists(file):
            df = pd.read_csv(file)
            table = os.path.splitext(os.path.basename(file))[0].replace(" ", "_").lower()
            df.to_sql(table, conn, if_exists="replace", index=False)
    conn.commit(), conn.close()

# Connect LangChain SQL database
db = SQLDatabase.from_uri("sqlite:///ecommerce.db")
toolkit = SQLDatabaseToolkit(db=db, llm=llm)

# Initialize agent with intermediate steps
agent_executor = initialize_agent(
    tools=toolkit.get_tools(),
    llm=llm,
    agent="zero-shot-react-description",
    verbose=False,
    return_intermediate_steps=True
)

# Query handler that shows SQL and answer
def answer_query(question: str) -> str:
    # Run agent and collect intermediate steps
    response = agent_executor.invoke({"input": question})
    sql_step = None
    for action, observation in response.get("intermediate_steps", []):
        # The action.log contains the SQL generated by the agent
        if hasattr(action, 'log') and 'SELECT' in action.log.upper():
            sql_step = action.log
            break
    sql_display = sql_step or "-- SQL not extracted --"
    final_answer = response.get("output", "No answer generated.")
    return (f"**Generated SQL:**\n```sql\n{sql_display}\n```\n\n"
            f"**Answer:**\n{final_answer}")
